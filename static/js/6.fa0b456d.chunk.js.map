{"version":3,"sources":["components/Quotes/NoQuotesFound.module.css","components/Quotes/QuoteList.module.css","components/Quotes/QuoteItem.module.css","components/Quotes/NoQuotesFound.js","components/Quotes/QuoteItem.js","components/Quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","NoQuotesFound","className","styles","noquotes","to","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,KAAO,0B,yGCcVC,EAXO,WACpB,OACE,sBAAKC,UAAWC,IAAOC,SAAvB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,cAAzB,6B,yCCmBSC,EAtBG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAOK,KAAtB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMR,UAAU,MAAMG,GAAE,kBAAaE,EAAMI,IAA3C,iCCgDSC,EA7CG,SAACL,GACjB,IAXkBM,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAKXC,EAA2C,QAF7B,IAAIC,gBAAgBH,EAASI,QAEhBC,IAAI,QAE/BC,GAnBYV,EAmBcN,EAAMM,OAnBZC,EAmBoBK,EAlBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOf,OAAO,GAAKgB,EAAOhB,OAAO,GAAK,GAAK,EAE3Ce,EAAOf,OAAO,GAAKgB,EAAOhB,OAAO,GAAK,GAAK,MAyBtD,OACE,qCACE,qBAAKR,UAAWC,IAAOwB,QAAvB,SACE,yBAAQC,QAZc,WAE1Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,QAAD,OAAUF,EAAe,OAAS,UAQtC,kBACQA,EAAe,aAAe,iBAGxC,oBAAIjB,UAAWC,IAAO4B,KAAtB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,aCPRuB,UA/BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKpC,UAAU,WAAf,SACE,cAACyC,EAAA,EAAD,MAKFF,EACK,mBAAGvC,UAAU,mBAAb,SAAiCuC,IAG3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAW/B,OAAQ0B,IAHjB,cAAC,EAAD","file":"static/js/6.fa0b456d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3dDqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__29Ove\",\"sorting\":\"QuoteList_sorting__3qq60\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__M3eDg\"};","import { Link } from \"react-router-dom\";\n\nimport styles from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={styles.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/quotes/new\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={styles.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nQuoteItem.propTypes = {\n  id: PropTypes.string,\n  author: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default QuoteItem;\n","import { useHistory, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./QuoteList.module.css\";\n\nimport QuoteItem from \"./QuoteItem\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.author[0] > quoteB.author[0] ? 1 : -1;\n    } else {\n      return quoteA.author[0] < quoteB.author[0] ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  // default JavaScript Constructur Function\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAsc = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\n\n  const handleChangeSorting = () => {\n    // can use objects instead of stirng in all react router components\n    history.push({\n      pathname: location.pathname,\n      search: `sort=${isSortingAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${isSortingAsc ? \"desc\" : \"asc\"}`);\n  };\n\n  return (\n    <>\n      <div className={styles.sorting}>\n        <button onClick={handleChangeSorting}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={styles.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nQuoteList.propTypes = {\n  quotes: PropTypes.array,\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/Quotes/NoQuotesFound\";\nimport QuoteList from \"../components/Quotes/QuoteList\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}